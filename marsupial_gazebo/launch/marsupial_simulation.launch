<launch>
    # --------------------------------------------------------------------- PARAMETER --------------------------------------------------------------------- 
    
    ## General Parameters
    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models:$(find marsupial_description)/models/:$(find marsupial_gazebo)/models/"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models:$(find marsupial_description)/models/:$(find marsupial_gazebo)/models/"/>

    <arg name="launch_ugv" default="true" />
    <arg name="launch_uav" default="true" />
    <arg name="gui" default="true" />
    <arg name="paused" default="false" />
    <!-- <arg name="world_name" default="stage_4" /> -->
    <arg name="world_name" default="stage_1" />

    <!-- <arg name="use_sim_time" default="true"/> -->

    ## UAV Parameter
    <arg name="uav_name" default="firefly" />
    <arg name="ugv_name" default="arco" />

    # scenario_1    3.0, -1.0 , 0.5, 0 , 0 , 3.1415
    # scenario_4    -0.54, 1.97 , 1.32, 0.11 , -0.04 , 3.1415
    # scenario_5    -2.0, 2.0 , 0.5, 0.0 , -0.0 , 3.1415
    # thermal_central    6.88, 0.22 , 2.0 , 0.06, 0.243 , -3.1415
    <arg name="init_pos_x" default="3.0" />
    <arg name="init_pos_y" default="-1.0" />
    <arg name="init_pos_z" default="0.5" />
    <arg name="init_pos_th_roll" default="0" />
    <arg name="init_pos_th_pitch" default="-0" />
    <arg name="init_pos_th_yaw" default="3.1415" />


    # scenario_1    18.0, 4.0 , 0.3 , 3.1415
    # scenario_5    14, 16 , 0.4, 0.0 , 0.0 , 3.1415
    # thermal_central    52.53 , 27.37 , 3.53 , 0 
    <arg name="dll_init_pos_x" default="18" />
    <arg name="dll_init_pos_y" default="4" />
    <arg name="dll_init_pos_z" default="0.4" />
    <arg name="dll_init_pos_th" default="3.1415" />
    <arg name="able_aloam_uav" default="false"/>
    <arg name="able_dll_uav" default="true"/>

    ## UGV Parameter Define real/simulation and controller type
    <arg name="simulation" value="true" />                                  <!-- Define if it will run on a robot or simulation -->
    
    # --------------------------------------------------------------------- NODES --------------------------------------------------------------------- 
    
    # ---------------------------------------------------Start Gazebo environment ---------------------------------------------------
    <!-- <param name="/use_sim_time" value="$(arg use_sim_time)"/> -->
    
    <include file="$(find marsupial_gazebo)/launch/empty_world.launch">
        <arg name="world_name" value="$(find marsupial_gazebo)/worlds/$(arg world_name).world" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="debug" value="false" />
        <arg name="verbose" value="true" />
    </include>

    ## Spawn Model Gazebo
    <node name="marsupial_spawn" pkg="gazebo_ros" type="spawn_model"  output="screen" args="-file $(find marsupial_description)/models/marsupial/marsupial.sdf -sdf -model marsupial
                                                                        -x $(arg init_pos_x) -y $(arg init_pos_y) -z $(arg init_pos_z) -R $(arg init_pos_th_roll) -P $(arg init_pos_th_pitch) -Y $(arg init_pos_th_yaw)" output="screen"/>
    <!-- <node name="marsupial_spawn" pkg="gazebo_ros" type="spawn_model" args="-file $(find marsupial_description)/models/marsupial/marsupial.sdf -sdf -model marsupial" output="screen">
    </node> -->

    <include file="$(find marsupial_gazebo)/launch/marsupial_frames_simulation.launch">
        <arg name="ugv_name" value="$(arg ugv_name)"/>
        <arg name="uav_name" value="$(arg uav_name)"/>
        <arg name="able_frames_ugv" value="true"/>
        <arg name="able_frames_uav" value="true"/>
    </include>

    # --------------------------------------------------- Start UGV Simulation ---------------------------------------------------

<group if="$(arg launch_ugv)">
    
    ## UGV Localization Stuff

    <group ns="$(arg ugv_name)">
        <node pkg="timed_roslaunch" type="timed_roslaunch.sh" name="timed_ugv_dll" output="screen"
            args="0 marsupial_launchers dll_simulation.launch robot_name:=$(arg ugv_name) map:=$(arg world_name) 
            initial_x:=$(arg dll_init_pos_x) initial_y:=$(arg dll_init_pos_y) initial_z:=$(arg dll_init_pos_z) initial_a:=$(arg dll_init_pos_th) ">
        </node>

        <!-- Start Diagnostics Aggreagator -->
        <!-- <include file="$(find idmind_diagnostics)/launch/idmind_diagnostics.launch" /> -->

        <!-- Otherwise initiate sensors -->
        <!-- <group unless="$(arg simulation)">
            <include file="$(find idmind_imu)/launch/idmind_imu.launch">
                <arg name="imu" value="razor" />
                <arg name="tf_prefix" value="$(arg robot_name)/" />
            </include>
        </group> -->
        
        <!-- Start sensors and actuators nodes -->
        <!-- <include file="$(find idmind_sensorsboard)/launch/idmind_sensorsboard.launch">
            <arg name="simulation" value="$(arg simulation)" />
        </include> -->

        <!-- Start interface node -->
        <!-- <include file="$(find idmind_interface)/launch/idmind_interface.launch">
        </include> -->

        <!-- Start idmind_teleop -->
        <!-- <include file="$(find idmind_teleop)/launch/idmind_teleop.launch">
            <arg name="cmd_vel_topic" default="idmind_motors/set_velocities" />
        </include> -->

    </group>
</group>

    # --------------------------------------------------- Start UAV Simulation ---------------------------------------------------
    
<group if="$(arg launch_uav)">

    <group ns="$(arg uav_name)">

        ## UAV Control Stuff
        <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg uav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg uav_name).yaml" />
            <remap from="/$(arg uav_name)/odometry" to="ground_truth/odometry"/> # /laser_odom_to_init" loam
        </node>
        
        <node name="velocity_PID_controller" pkg="rotors_control" type="velocity_PID_controller" output="screen">
            <remap from="/$(arg uav_name)/odom" to="ground_truth/odometry"/> # /laser_odom_to_init" loam
        </node>
        
        ## UAV Joy Stuff
        <node pkg="joy" type="joy_node" name="joy_$(arg uav_name)" respawn="true" >
            <param name="dev" type="string" value="/dev/input/js1" /> 
            <param name="deadzone" value="0.12" />
        </node>

        <node pkg="rotors_joy_interface" type="joy_vel" name="joy_vel_$(arg uav_name)" respawn="true" >
            <param name="max_vel_x" value="1.0" /> 
            <param name="max_vel_y" value="1.0" /> 
            <param name="max_yaw_rate" value="1.0" /> 
            <param name="axis_vel_y_" value="3" /> #axes x for node joy
            <param name="axis_vel_x_" value="4" /> #axes y for node joy
        </node>

        ## UAV Localization Stuff
        <node pkg="timed_roslaunch" type="timed_roslaunch.sh" name="timed_uav_dll" output="screen" if="$(arg able_dll_uav)"
            args="0 marsupial_launchers dll_simulation.launch robot_name:=$(arg uav_name) map:=$(arg world_name) 
            initial_x:=$(arg dll_init_pos_x) initial_y:=$(arg dll_init_pos_y) initial_z:=$(arg dll_init_pos_z) initial_a:=$(arg dll_init_pos_th) ">
        </node>
    
    </group>

    ## UAV Lidar Odometry Stuff
    <!-- <node pkg="timed_roslaunch" type="timed_roslaunch.sh" name="timed_uav_aloam" output="screen" if="$(arg able_aloam_uav)"
        args="10 marsupial_optimizer aloam.launch robot_name:=$(arg uav_name) only_odometry:=true">
    </node> -->

    <node pkg="upo_markers" type="marker_node" name="uav_marker_node" output="screen">
        <param name="base_frame_id" value="$(arg uav_name)/base_link"/>
        <param name="model" value="m100"/> <!-- m600 or m100 -->
        <param name="color" value="0.0"/> 
        <param name="color_r" value="0.0"/> 
        <param name="color_g" value="0.0"/> 
        <param name="color_b" value="0.0"/> 
        <param name="scale" value="2.5"/>
    </node>

        
</group>
        
</launch>